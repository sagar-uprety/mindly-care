<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"> -->
    <!-- <link rel="stylesheet" href="https://unpkg.com/flowbite@1.4.4/dist/flowbite.min.css" /> -->
    <script src="https://cdn.tailwindcss.com"></script>
    <title>Messages</title>
</head>

<body>
    <nav class="bg-white shadow-md">
        <div class="max-w-7xl mx-auto px-2 sm:px-6 lg:px-8">
          <div class="relative flex items-center justify-between h-16">
            <div class="absolute inset-y-0 left-0 flex items-center sm:hidden">
              <!-- Mobile menu button-->
              <button type="button" class="inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white" aria-controls="mobile-menu" aria-expanded="false">
                <span class="sr-only">Open main menu</span>
                <!--
                  Icon when menu is closed.
      
                  Heroicon name: outline/bars-3
      
                  Menu open: "hidden", Menu closed: "block"
                -->

                <!--
                  Icon when menu is open.
      
                  Heroicon name: outline/x-mark
      
                  Menu open: "block", Menu closed: "hidden"
                -->
                <svg class="hidden h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>
            <div class="flex-1 flex items-center justify-center sm:items-stretch sm:justify-start">
              <div class="flex-shrink-0 flex items-center">
                <a href="/">
                    <img src="/site-assets/logo-2.png" width="10%" alt="" srcset="">
                </a>
              </div>
              <div class="hidden sm:block sm:ml-6" style="margin-left: 40%;">
                <div class="flex space-x-4" style="margin: 10px;">
                  <!-- Current: "bg-gray-900 text-white", Default: "text-gray-300 hover:bg-gray-700 hover:text-white" -->
                  <a href="/dashboard" class="text-gray-800  hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium" aria-current="page">Dashboard</a>
      
                  <a href="/chat" class="text-gray-800 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium">Chat</a>
      
                  <a href="/logout" class="text-gray-800 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium">Logout</a>
                </div>
              </div>
            </div>
          </div>
        </div>
      
        <!-- Mobile menu, show/hide based on menu state. -->
        <div class="sm:hidden" id="mobile-menu">
          <div class="px-2 pt-2 pb-3 space-y-1">
            <a href="#" class="text-gray-500 block px-3 py-2 rounded-md text-base font-medium" aria-current="page">Dashboard</a>
      
            <a href="#" class="text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium">Team</a>
      
            <a href="#" class="text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium">Projects</a>
      
            <a href="#" class="text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium">Calendar</a>
          </div>
        </div>
      </nav>

    <div class="container mx-auto mt-4 shadow-lg">
        <div class="min-w-full border rounded lg:grid lg:grid-cols-3">
            <div class="border-r border-gray-300 lg:col-span-1">
                <div class="mx-3 my-3">
                    <div class="relative text-gray-600">
                        <span class="absolute inset-y-0 left-0 flex items-center pl-2">
                            <svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
                                stroke-width="2" viewBox="0 0 24 24" class="w-6 h-6 text-gray-300">
                                <path d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                            </svg>
                        </span>
                        <input type="search" class="block w-full py-2 pl-10 bg-gray-100 rounded outline-none"
                            name="search" placeholder="Search" required autocomplete="off"/>
                    </div>
                </div>

                <h2 class="my-4 mb-2 ml-2 text-lg text-gray-600">Professionals</h2>
                <ul class="overflow-auto h-[32rem]" id="contacts2">
                </ul>
                <button class="block w-full py-3 mt-14 bg-gray-100 rounded outline-none" onclick="newMessage()">New Chat</button>
            </div>
            <div class="hidden lg:col-span-2 lg:block">
                <div class="w-full">
                    <div class="relative flex items-center p-3 border-b border-gray-300">
                        <!-- <img class="object-cover w-10 h-10 rounded-full"
                            src="https://cdn.pixabay.com/photo/2018/01/15/07/51/woman-3083383__340.jpg"
                            alt="username" /> -->
                        <span id="chatTitle" class="block ml-2 font-bold text-gray-600">Helpline</span>
                        <!-- <span class="absolute w-3 h-3 bg-green-600 rounded-full left-10 top-3"> -->
                        </span>
                    </div>
                    <div class="relative w-full p-6 overflow-y-auto h-[38rem]">
                        <ul id="mesages" style="list-style-type:none;">
                        </ul>
                        <ul class="space-y-2">
                            <!-- <li class="justify-start w-fit w-max-xs px-4 py-2 text-gray-700 rounded shadow">
                                Hi
                            </li>
                            <li class="justify-start w-fit ml-auto px-4 py-2 text-gray-700 bg-gray-100 rounded shadow">
                                Hiiii
                            </li> -->
                        </ul>
                    </div>

                    <div class="flex items-center justify-between w-full p-3 border-t border-gray-300">
                        <button>
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 text-gray-500" fill="none"
                                viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                        </button>
                        <button>
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-gray-500" fill="none"
                                viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13" />
                            </svg>
                        </button>
                        <input type="text" placeholder="Message" id="chat-input"
                            class="block w-full py-2 pl-4 mx-3 bg-gray-100 rounded-full outline-none focus:text-gray-700"
                            name="message" required />
                        <button type="button" id="send">
                            <svg class="w-5 h-5 text-gray-500 origin-center transform rotate-90"
                                xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                <path
                                    d="M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z" />
                            </svg>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- <div class="">

        <div class="sidenav"
            style="position: fixed; left: 0; background-color: #80BFFF; padding-top: 80px; height: 100vh; width: 20%;">

            <button onclick="newMessage()">New Chat</button>
            <br><br>
            <ul class="list" style="list-style-type: none; padding-left: 10px;" id="contacts2">
            </ul>
        </div>

        <br><br>

        <ul id="mesages" style="list-style-type:none; margin-left: 20%; width: 80%;">
        </ul>

        <br><br><br><br>

    </div> -->

    <!-- <div style="position: fixed; bottom: 0; right: 0; width: 80%;">
        <input id="chat-input" type="text" style="width: 60%; padding: 3px;background-color: azure;"></input>

        <button id="send">Send</button>
        <div class="flex items-center py-2 px-3 bg-gray-50 rounded-lg dark:bg-gray-700">
            <input id="chat-input" rows="1"
                class="block mx-4 p-2.5 w-full text-sm text-gray-900 bg-white rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-800 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                placeholder="Your message..."></input>
            <button type="button" id="send"
                class="inline-flex justify-center p-2 text-blue-600 rounded-full cursor-pointer hover:bg-blue-100 dark:text-blue-500 dark:hover:bg-gray-600">
                <svg class="w-6 h-6 rotate-90" fill="currentColor" viewBox="0 0 20 20"
                    xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z">
                    </path>
                </svg>
            </button>
        </div>
    </div> -->

</body>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdn.socket.io/socket.io-3.0.1.min.js"></script>
<script src="https://momentjs.com/downloads/moment.min.js"></script>
<script>
    var socket = io()

    var messageArr = []
    var currentChatId = -1
    var currentChatName = ''
    var refresh = false
    var lastId = -1
    var lastSelected = -1
    var listSize = 0



    function newMessage() {
        socket.emit('newChat')
    }

    socket.on('newChatAdded', function ({ name, rid }) {
        var pass = true;
        var cli = document.createElement("li");
        var cont = document.getElementById('contacts2');

        cli.setAttribute("id", rid)
        cli.appendChild(document.createTextNode(name))
        cli.addEventListener("click", function (e) {
            socket.emit('getMsg', { user: e.target.innerText, id: e.target.id })
            e.target.style.fontWeight = "bold"
            // console.log(e)
            lastSelected = e.target.id
            currentChatName = e.target.innerText
            currentChatId = e.target.id
        })
        cont.childNodes.forEach((child) => {
            console.log(name);
            if (child.innerHTML == name) {
                pass = false;
            }
        })
        if (pass) {

            cont.appendChild(cli)
        }

    })

    setInterval(function () {
        socket.emit('getNames', { data: 'get names' })
    }, 1000)

    socket.on('listContacts', function (data) {
        // console.log(data)
        var cont = document.getElementById('contacts2')
        if (data.data.length < 1) {
            cont.innerHTML = ''
        }
        else if (listSize != data.data.length) {
            listSize = data.data.length
            cont.innerHTML = ''
            data.data.forEach(c => {
                // console.log(c)
                var cli2 = document.createElement("li")
                cli2.setAttribute("id", c.Id)
                cli2.setAttribute("class", "list_users flex items-center px-3 py-2 transition duration-150 ease-in-out border-b border-gray-300 cursor-pointer hover:bg-gray-100 focus:outline-none text-base block ml-2 font-semibold text-gray-600")
                cli2.appendChild(document.createTextNode(c.Username))
                cli2.addEventListener("click", function (e) {
                    document.querySelector("#chatTitle").innerHTML = e.target.innerText
                    socket.emit('getMsg', { user: e.target.innerText, id: e.target.id })
                    e.target.style.fontWeight = "bold"
                    lastSelected = e.target.id
                    currentChatName = e.target.innerText
                    currentChatId = e.target.id
                })
                cont.appendChild(cli2)
            })
        }

    })

    var item = document.getElementsByClassName("list_users");
    console.log(item);
    for (var i = 0; i < item.length; i++) {
        item[i].addEventListener("click", function (e) {
            socket.emit('getMsg', { user: e.target.innerText, id: e.target.id })
            lastSelected = e.target.id
            currentChatName = e.target.innerText
            currentChatId = e.target.id
            window.scrollTo(0, document.body.scrollHeight);
        });
    }

    setInterval(function () {
        socket.emit('getMsg', { user: currentChatName, id: currentChatId })
        for (var i = 0; i < item.length; i++) {
            lastSelected == item[i].id ? (item[i].style.fontWeight = 'bold') : (item[i].style.fontWeight = 'normal')
        }
    }, 1000)

    socket.on('showMsg', function ({ data, result }) {

        if (result.length < 1) {
            var ul = document.getElementById("mesages");
            ul.innerHTML = ''
        }

        else if (lastId != result[result.length - 1]?.Id) {
            lastId = result[result.length - 1]?.Id || -1
            currentChatId = data.id
            var ul = document.getElementById("mesages");
            ul.innerHTML = ''
            result.forEach(m => {
                messageArr.push(m.Content)
                var i = m.FromUser
                var timeFormat = m.Time.split(/[- :]/);
                var timeString = timeFormat[2].substring(0, 2) + " " + moment().month(timeFormat[1] - 1).format("MMMM").substring(0, 3) + ", " + timeFormat[2].substring(3) + ":" + timeFormat[3]
                var ul = document.getElementById("mesages");
                var li = document.createElement("li");
                var time = document.createElement("p")
                time.setAttribute("style", "font-size: 12px; margin: 0px")
                time.append(timeString)
                var children = ul.children.length + 1
                li.setAttribute("id", "element" + children)
                i == data.id ?(li.setAttribute("class", "justify-start max-w-xs px-4 py-2 mb-2 text-gray-700 rounded shadow w-fit w-max-sm")): (li.setAttribute("class", "justify-start mb-2 w-max-sm w-fit ml-auto px-4 py-2 text-gray-700 bg-gray-100 rounded shadow"))
                    
                li.appendChild(document.createTextNode(m.Content));
                li.appendChild(document.createElement("br"))
                li.append(time)
                ul.appendChild(li)
            })
        }

    })

    var send = document.getElementById('send')
    var messageData = document.getElementById('chat-input')
    send.addEventListener('click', function () {
        var data = messageData.value
        messageData.value = ''

        socket.emit('messageData', { data: data, toId: currentChatId })
    })

    socket.emit('test', 'test');
</script>

</html>